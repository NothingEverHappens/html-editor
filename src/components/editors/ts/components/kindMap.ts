
export const kindMap: Record<string, string> = {
    [0]: 'Unknown',
    [1]: 'EndOfFileToken',
    [2]: 'SingleLineCommentTrivia',
    [3]: 'MultiLineCommentTrivia',
    [4]: 'NewLineTrivia',
    [5]: 'WhitespaceTrivia',
// We detect and preserve #! on the first line
    [6]: 'ShebangTrivia',
// We detect and provide better error recovery when we encounter a git merge marker.  This
// allows us to edit files with git-conflict markers in them in a much more pleasant manner.
    [7]: 'ConflictMarkerTrivia',
// Literals
    [8]: 'NumericLiteral',
    [9]: 'BigIntLiteral',
    [10]: 'StringLiteral',
    [11]: 'JsxText',
    [12]: 'JsxTextAllWhiteSpaces',
    [13]: 'RegularExpressionLiteral',
    [14]: 'NoSubstitutionTemplateLiteral',
// Pseudo-literals
    [15]: 'TemplateHead',
    [16]: 'TemplateMiddle',
    [17]: 'TemplateTail',
// Punctuation
    [18]: 'OpenBraceToken',
    [19]: 'CloseBraceToken',
    [20]: 'OpenParenToken',
    [21]: 'CloseParenToken',
    [22]: 'OpenBracketToken',
    [23]: 'CloseBracketToken',
    [24]: 'DotToken',
    [25]: 'DotDotDotToken',
    [26]: 'SemicolonToken',
    [27]: 'CommaToken',
    [28]: 'QuestionDotToken',
    [29]: 'LessThanToken',
    [30]: 'LessThanSlashToken',
    [31]: 'GreaterThanToken',
    [32]: 'LessThanEqualsToken',
    [33]: 'GreaterThanEqualsToken',
    [34]: 'EqualsEqualsToken',
    [35]: 'ExclamationEqualsToken',
    [36]: 'EqualsEqualsEqualsToken',
    [37]: 'ExclamationEqualsEqualsToken',
    [38]: 'EqualsGreaterThanToken',
    [39]: 'PlusToken',
    [40]: 'MinusToken',
    [41]: 'AsteriskToken',
    [42]: 'AsteriskAsteriskToken',
    [43]: 'SlashToken',
    [44]: 'PercentToken',
    [45]: 'PlusPlusToken',
    [46]: 'MinusMinusToken',
    [47]: 'LessThanLessThanToken',
    [48]: 'GreaterThanGreaterThanToken',
    [49]: 'GreaterThanGreaterThanGreaterThanToken',
    [50]: 'AmpersandToken',
    [51]: 'BarToken',
    [52]: 'CaretToken',
    [53]: 'ExclamationToken',
    [54]: 'TildeToken',
    [55]: 'AmpersandAmpersandToken',
    [56]: 'BarBarToken',
    [57]: 'QuestionToken',
    [58]: 'ColonToken',
    [59]: 'AtToken',
    [60]: 'QuestionQuestionToken',
    /** Only the JSDoc scanner produces BacktickToken. The normal scanner produces NoSubstitutionTemplateLiteral and related kinds. */
    [61]: 'BacktickToken',
// Assignments
    [62]: 'EqualsToken',
    [63]: 'PlusEqualsToken',
    [64]: 'MinusEqualsToken',
    [65]: 'AsteriskEqualsToken',
    [66]: 'AsteriskAsteriskEqualsToken',
    [67]: 'SlashEqualsToken',
    [68]: 'PercentEqualsToken',
    [69]: 'LessThanLessThanEqualsToken',
    [70]: 'GreaterThanGreaterThanEqualsToken',
    [71]: 'GreaterThanGreaterThanGreaterThanEqualsToken',
    [72]: 'AmpersandEqualsToken',
    [73]: 'BarEqualsToken',
    [74]: 'CaretEqualsToken',
// Identifiers and PrivateIdentifiers
    [75]: 'Identifier',
    [76]: 'PrivateIdentifier',
// Reserved words
    [77]: 'BreakKeyword',
    [78]: 'CaseKeyword',
    [79]: 'CatchKeyword',
    [80]: 'ClassKeyword',
    [81]: 'ConstKeyword',
    [82]: 'ContinueKeyword',
    [83]: 'DebuggerKeyword',
    [84]: 'DefaultKeyword',
    [85]: 'DeleteKeyword',
    [86]: 'DoKeyword',
    [87]: 'ElseKeyword',
    [88]: 'EnumKeyword',
    [89]: 'ExportKeyword',
    [90]: 'ExtendsKeyword',
    [91]: 'FalseKeyword',
    [92]: 'FinallyKeyword',
    [93]: 'ForKeyword',
    [94]: 'FunctionKeyword',
    [95]: 'IfKeyword',
    [96]: 'ImportKeyword',
    [97]: 'InKeyword',
    [98]: 'InstanceOfKeyword',
    [99]: 'NewKeyword',
    [100]: 'NullKeyword',
    [101]: 'ReturnKeyword',
    [102]: 'SuperKeyword',
    [103]: 'SwitchKeyword',
    [104]: 'ThisKeyword',
    [105]: 'ThrowKeyword',
    [106]: 'TrueKeyword',
    [107]: 'TryKeyword',
    [108]: 'TypeOfKeyword',
    [109]: 'VarKeyword',
    [110]: 'VoidKeyword',
    [111]: 'WhileKeyword',
    [112]: 'WithKeyword',
// Strict mode reserved words
    [113]: 'ImplementsKeyword',
    [114]: 'InterfaceKeyword',
    [115]: 'LetKeyword',
    [116]: 'PackageKeyword',
    [117]: 'PrivateKeyword',
    [118]: 'ProtectedKeyword',
    [119]: 'PublicKeyword',
    [120]: 'StaticKeyword',
    [121]: 'YieldKeyword',
// Contextual keywords
    [122]: 'AbstractKeyword',
    [123]: 'AsKeyword',
    [124]: 'AssertsKeyword',
    [125]: 'AnyKeyword',
    [126]: 'AsyncKeyword',
    [127]: 'AwaitKeyword',
    [128]: 'BooleanKeyword',
    [129]: 'ConstructorKeyword',
    [130]: 'DeclareKeyword',
    [131]: 'GetKeyword',
    [132]: 'InferKeyword',
    [133]: 'IsKeyword',
    [134]: 'KeyOfKeyword',
    [135]: 'ModuleKeyword',
    [136]: 'NamespaceKeyword',
    [137]: 'NeverKeyword',
    [138]: 'ReadonlyKeyword',
    [139]: 'RequireKeyword',
    [140]: 'NumberKeyword',
    [141]: 'ObjectKeyword',
    [142]: 'SetKeyword',
    [143]: 'StringKeyword',
    [144]: 'SymbolKeyword',
    [145]: 'TypeKeyword',
    [146]: 'UndefinedKeyword',
    [147]: 'UniqueKeyword',
    [148]: 'UnknownKeyword',
    [149]: 'FromKeyword',
    [150]: 'GlobalKeyword',
    [151]: 'BigIntKeyword',
    [152]: 'OfKeyword',
// Parse tree nodes
// Names
    [153]: 'QualifiedName',
    [154]: 'ComputedPropertyName',
// Signature elements
    [155]: 'TypeParameter',
    [156]: 'Parameter',
    [157]: 'Decorator',
// TypeMember
    [158]: 'PropertySignature',
    [159]: 'PropertyDeclaration',
    [160]: 'MethodSignature',
    [161]: 'MethodDeclaration',
    [162]: 'Constructor',
    [163]: 'GetAccessor',
    [164]: 'SetAccessor',
    [165]: 'CallSignature',
    [166]: 'ConstructSignature',
    [167]: 'IndexSignature',
// Type
    [168]: 'TypePredicate',
    [169]: 'TypeReference',
    [170]: 'FunctionType',
    [171]: 'ConstructorType',
    [172]: 'TypeQuery',
    [173]: 'TypeLiteral',
    [174]: 'ArrayType',
    [175]: 'TupleType',
    [176]: 'OptionalType',
    [177]: 'RestType',
    [178]: 'UnionType',
    [179]: 'IntersectionType',
    [180]: 'ConditionalType',
    [181]: 'InferType',
    [182]: 'ParenthesizedType',
    [183]: 'ThisType',
    [184]: 'TypeOperator',
    [185]: 'IndexedAccessType',
    [186]: 'MappedType',
    [187]: 'LiteralType',
    [188]: 'ImportType',
// Binding patterns
    [189]: 'ObjectBindingPattern',
    [190]: 'ArrayBindingPattern',
    [191]: 'BindingElement',
// Expression
    [192]: 'ArrayLiteralExpression',
    [193]: 'ObjectLiteralExpression',
    [194]: 'PropertyAccessExpression',
    [195]: 'ElementAccessExpression',
    [196]: 'CallExpression',
    [197]: 'NewExpression',
    [198]: 'TaggedTemplateExpression',
    [199]: 'TypeAssertionExpression',
    [200]: 'ParenthesizedExpression',
    [201]: 'FunctionExpression',
    [202]: 'ArrowFunction',
    [203]: 'DeleteExpression',
    [204]: 'TypeOfExpression',
    [205]: 'VoidExpression',
    [206]: 'AwaitExpression',
    [207]: 'PrefixUnaryExpression',
    [208]: 'PostfixUnaryExpression',
    [209]: 'BinaryExpression',
    [210]: 'ConditionalExpression',
    [211]: 'TemplateExpression',
    [212]: 'YieldExpression',
    [213]: 'SpreadElement',
    [214]: 'ClassExpression',
    [215]: 'OmittedExpression',
    [216]: 'ExpressionWithTypeArguments',
    [217]: 'AsExpression',
    [218]: 'NonNullExpression',
    [219]: 'MetaProperty',
    [220]: 'SyntheticExpression',
// Misc
    [221]: 'TemplateSpan',
    [222]: 'SemicolonClassElement',
// Element
    [223]: 'Block',
    [224]: 'EmptyStatement',
    [225]: 'VariableStatement',
    [226]: 'ExpressionStatement',
    [227]: 'IfStatement',
    [228]: 'DoStatement',
    [229]: 'WhileStatement',
    [230]: 'ForStatement',
    [231]: 'ForInStatement',
    [232]: 'ForOfStatement',
    [233]: 'ContinueStatement',
    [234]: 'BreakStatement',
    [235]: 'ReturnStatement',
    [236]: 'WithStatement',
    [237]: 'SwitchStatement',
    [238]: 'LabeledStatement',
    [239]: 'ThrowStatement',
    [240]: 'TryStatement',
    [241]: 'DebuggerStatement',
    [242]: 'VariableDeclaration',
    [243]: 'VariableDeclarationList',
    [244]: 'FunctionDeclaration',
    [245]: 'ClassDeclaration',
    [246]: 'InterfaceDeclaration',
    [247]: 'TypeAliasDeclaration',
    [248]: 'EnumDeclaration',
    [249]: 'ModuleDeclaration',
    [250]: 'ModuleBlock',
    [251]: 'CaseBlock',
    [252]: 'NamespaceExportDeclaration',
    [253]: 'ImportEqualsDeclaration',
    [254]: 'ImportDeclaration',
    [255]: 'ImportClause',
    [256]: 'NamespaceImport',
    [257]: 'NamedImports',
    [258]: 'ImportSpecifier',
    [259]: 'ExportAssignment',
    [260]: 'ExportDeclaration',
    [261]: 'NamedExports',
    [262]: 'NamespaceExport',
    [263]: 'ExportSpecifier',
    [264]: 'MissingDeclaration',
// Module references
    [265]: 'ExternalModuleReference',
// JSX
    [266]: 'JsxElement',
    [267]: 'JsxSelfClosingElement',
    [268]: 'JsxOpeningElement',
    [269]: 'JsxClosingElement',
    [270]: 'JsxFragment',
    [271]: 'JsxOpeningFragment',
    [272]: 'JsxClosingFragment',
    [273]: 'JsxAttribute',
    [274]: 'JsxAttributes',
    [275]: 'JsxSpreadAttribute',
    [276]: 'JsxExpression',
// Clauses
    [277]: 'CaseClause',
    [278]: 'DefaultClause',
    [279]: 'HeritageClause',
    [280]: 'CatchClause',
// Property assignments
    [281]: 'PropertyAssignment',
    [282]: 'ShorthandPropertyAssignment',
    [283]: 'SpreadAssignment',
// Enum
    [284]: 'EnumMember',
// Unparsed
    [285]: 'UnparsedPrologue',
    [286]: 'UnparsedPrepend',
    [287]: 'UnparsedText',
    [288]: 'UnparsedInternalText',
    [289]: 'UnparsedSyntheticReference',
// Top-level nodes
    [290]: 'SourceFile',
    [291]: 'Bundle',
    [292]: 'UnparsedSource',
    [293]: 'InputFiles',
// JSDoc nodes
    [294]: 'JSDocTypeExpression',
// The * type
    [295]: 'JSDocAllType',
// The ? type
    [296]: 'JSDocUnknownType',
    [297]: 'JSDocNullableType',
    [298]: 'JSDocNonNullableType',
    [299]: 'JSDocOptionalType',
    [300]: 'JSDocFunctionType',
    [301]: 'JSDocVariadicType',
// https://jsdoc.app/about-namepaths.html
    [302]: 'JSDocNamepathType',
    [303]: 'JSDocComment',
    [304]: 'JSDocTypeLiteral',
    [305]: 'JSDocSignature',
    [306]: 'JSDocTag',
    [307]: 'JSDocAugmentsTag',
    [308]: 'JSDocImplementsTag',
    [309]: 'JSDocAuthorTag',
    [310]: 'JSDocClassTag',
    [311]: 'JSDocPublicTag',
    [312]: 'JSDocPrivateTag',
    [313]: 'JSDocProtectedTag',
    [314]: 'JSDocReadonlyTag',
    [315]: 'JSDocCallbackTag',
    [316]: 'JSDocEnumTag',
    [317]: 'JSDocParameterTag',
    [318]: 'JSDocReturnTag',
    [319]: 'JSDocThisTag',
    [320]: 'JSDocTypeTag',
    [321]: 'JSDocTemplateTag',
    [322]: 'JSDocTypedefTag',
    [323]: 'JSDocPropertyTag',
// Synthesized list
    [324]: 'SyntaxList',
// Transformation nodes
    [325]: 'NotEmittedStatement',
    [326]: 'PartiallyEmittedExpression',
    [327]: 'CommaListExpression',
    [328]: 'MergeDeclarationMarker',
    [329]: 'EndOfDeclarationMarker',
    [330]: 'SyntheticReferenceExpression',
// Enum value count
    [331]: 'Count'
};


